package com.varabyte.kobweb.compose.ui.graphics

private fun Float.toColorInt() = (this.coerceIn(0f, 1f) * 255.0f).toInt()
private fun Int.toColorFloat() = this.and(0xFF) / 255.0f

private val DARKENING_AMOUNT = 0.7f

/**
 * A base class for colors which provide additional functionality on top of the color class included in Web Compose.
 *
 * Use [toCssColor] to convert between this class and the Web Compose version.
 */
sealed interface Color {
    fun inverted(): Color
    fun darkened(): Color

    class Rgb internal constructor(val value: Int) : Color {
        val red: Int get() = value.shr(16).and(0xFF)
        val green: Int get() = value.shr(8).and(0xFF)
        val blue: Int get() = value.shr(0).and(0xFF)
        val alpha: Int get() = value.shr(24).and(0xFF)

        val redf: Float get() = red.toColorFloat()
        val greenf: Float get() = green.toColorFloat()
        val bluef: Float get() = blue.toColorFloat()
        val alphaf: Float get() = alpha.toColorFloat()

        override fun inverted() = rgba(255 - red, 255 - green, 255 - blue, alpha)
        override fun darkened() =
            rgba(redf * DARKENING_AMOUNT, greenf * DARKENING_AMOUNT, bluef * DARKENING_AMOUNT, alphaf)

        fun copy(red: Int = this.red, green: Int = this.green, blue: Int = this.blue, alpha: Int = this.alpha) =
            rgba(red, green, blue, alpha)

        fun copyf(red: Float = redf, green: Float = this.greenf, blue: Float = this.bluef, alpha: Float = this.alphaf) =
            rgba(red, green, blue, alpha)

        override fun toString(): String {
            return if (alpha == 0xFF) "rgb(r=$red g=$green b=$blue)" else "rgba(r=$red g=$green b=$blue a=$alpha)"
        }
    }

    companion object {
        fun rgb(value: Int) = Rgb(0xFF.shl(24).or(value))
        fun rgba(value: Int) = Rgb(value)

        fun rgb(r: Int, g: Int, b: Int) = rgba(r, g, b, 0xFF)
        fun rgba(r: Int, g: Int, b: Int, a: Int) = Rgb(
            r.and(0xFF).shl(16)
                .or(g.and(0xFF).shl(8))
                .or(b.and(0xFF).shl(0))
                .or(a.and(0xFF).shl(24))
        )

        fun rgb(r: Float, g: Float, b: Float) = rgb(r.toColorInt(), g.toColorInt(), b.toColorInt())
        fun rgba(r: Float, g: Float, b: Float, a: Float) =
            rgba(r.toColorInt(), g.toColorInt(), b.toColorInt(), a.toColorInt())

        fun rgba(r: Int, g: Int, b: Int, a: Float) = rgba(r, g, b, a.toColorInt())

        inline val Transparent get() = rgba(0, 0, 0, 0)

        // From https://www.w3schools.com/colors/colors_names.asp
        inline val AliceBlue get() = rgb(0xF0, 0xF8, 0xFF)
        inline val AntiqueWhite get() = rgb(0xFA, 0xEB, 0xD7)
        inline val Aqua get() = rgb(0x00, 0xFF, 0xFF)
        inline val Aquamarine get() = rgb(0x7F, 0xFF, 0xD4)
        inline val Azure get() = rgb(0xF0, 0xFF, 0xFF)
        inline val Beige get() = rgb(0xF5, 0xF5, 0xDC)
        inline val Bisque get() = rgb(0xFF, 0xE4, 0xC4)
        inline val Black get() = rgb(0x00, 0x00, 0x00)
        inline val BlanchedAlmond get() = rgb(0xFF, 0xEB, 0xCD)
        inline val Blue get() = rgb(0x00, 0x00, 0xFF)
        inline val BlueViolet get() = rgb(0x8A, 0x2B, 0xE2)
        inline val Brown get() = rgb(0xA5, 0x2A, 0x2A)
        inline val BurlyWood get() = rgb(0xDE, 0xB8, 0x87)
        inline val CadetBlue get() = rgb(0x5F, 0x9E, 0xA0)
        inline val Chartreuse get() = rgb(0x7F, 0xFF, 0x00)
        inline val Chocolate get() = rgb(0xD2, 0x69, 0x1E)
        inline val Coral get() = rgb(0xFF, 0x7F, 0x50)
        inline val CornflowerBlue get() = rgb(0x64, 0x95, 0xED)
        inline val Cornsilk get() = rgb(0xFF, 0xF8, 0xDC)
        inline val Crimson get() = rgb(0xDC, 0x14, 0x3C)
        inline val Cyan get() = rgb(0x00, 0xFF, 0xFF)
        inline val DarkBlue get() = rgb(0x00, 0x00, 0x8B)
        inline val DarkCyan get() = rgb(0x00, 0x8B, 0x8B)
        inline val DarkGoldenRod get() = rgb(0xB8, 0x86, 0x0B)
        inline val DarkGray get() = rgb(0xA9, 0xA9, 0xA9)
        inline val DarkGrey get() = rgb(0xA9, 0xA9, 0xA9)
        inline val DarkGreen get() = rgb(0x00, 0x64, 0x00)
        inline val DarkKhaki get() = rgb(0xBD, 0xB7, 0x6B)
        inline val DarkMagenta get() = rgb(0x8B, 0x00, 0x8B)
        inline val DarkOliveGreen get() = rgb(0x55, 0x6B, 0x2F)
        inline val DarkOrange get() = rgb(0xFF, 0x8C, 0x00)
        inline val DarkOrchid get() = rgb(0x99, 0x32, 0xCC)
        inline val DarkRed get() = rgb(0x8B, 0x00, 0x00)
        inline val DarkSalmon get() = rgb(0xE9, 0x96, 0x7A)
        inline val DarkSeaGreen get() = rgb(0x8F, 0xBC, 0x8F)
        inline val DarkSlateBlue get() = rgb(0x48, 0x3D, 0x8B)
        inline val DarkSlateGray get() = rgb(0x2F, 0x4F, 0x4F)
        inline val DarkSlateGrey get() = rgb(0x2F, 0x4F, 0x4F)
        inline val DarkTurquoise get() = rgb(0x00, 0xCE, 0xD1)
        inline val DarkViolet get() = rgb(0x94, 0x00, 0xD3)
        inline val DeepPink get() = rgb(0xFF, 0x14, 0x93)
        inline val DeepSkyBlue get() = rgb(0x00, 0xBF, 0xFF)
        inline val DimGray get() = rgb(0x69, 0x69, 0x69)
        inline val DimGrey get() = rgb(0x69, 0x69, 0x69)
        inline val DodgerBlue get() = rgb(0x1E, 0x90, 0xFF)
        inline val FireBrick get() = rgb(0xB2, 0x22, 0x22)
        inline val FloralWhite get() = rgb(0xFF, 0xFA, 0xF0)
        inline val ForestGreen get() = rgb(0x22, 0x8B, 0x22)
        inline val Fuchsia get() = rgb(0xFF, 0x00, 0xFF)
        inline val Gainsboro get() = rgb(0xDC, 0xDC, 0xDC)
        inline val GhostWhite get() = rgb(0xF8, 0xF8, 0xFF)
        inline val Gold get() = rgb(0xFF, 0xD7, 0x00)
        inline val GoldenRod get() = rgb(0xDA, 0xA5, 0x20)
        inline val Gray get() = rgb(0x80, 0x80, 0x80)
        inline val Grey get() = rgb(0x80, 0x80, 0x80)
        inline val Green get() = rgb(0x00, 0x80, 0x00)
        inline val GreenYellow get() = rgb(0xAD, 0xFF, 0x2F)
        inline val HoneyDew get() = rgb(0xF0, 0xFF, 0xF0)
        inline val HotPink get() = rgb(0xFF, 0x69, 0xB4)
        inline val IndianRed get() = rgb(0xCD, 0x5C, 0x5C)
        inline val Indigo get() = rgb(0x4B, 0x00, 0x82)
        inline val Ivory get() = rgb(0xFF, 0xFF, 0xF0)
        inline val Khaki get() = rgb(0xF0, 0xE6, 0x8C)
        inline val Lavender get() = rgb(0xE6, 0xE6, 0xFA)
        inline val LavenderBlush get() = rgb(0xFF, 0xF0, 0xF5)
        inline val LawnGreen get() = rgb(0x7C, 0xFC, 0x00)
        inline val LemonChiffon get() = rgb(0xFF, 0xFA, 0xCD)
        inline val LightBlue get() = rgb(0xAD, 0xD8, 0xE6)
        inline val LightCoral get() = rgb(0xF0, 0x80, 0x80)
        inline val LightCyan get() = rgb(0xE0, 0xFF, 0xFF)
        inline val LightGoldenRodYellow get() = rgb(0xFA, 0xFA, 0xD2)
        inline val LightGray get() = rgb(0xD3, 0xD3, 0xD3)
        inline val LightGrey get() = rgb(0xD3, 0xD3, 0xD3)
        inline val LightGreen get() = rgb(0x90, 0xEE, 0x90)
        inline val LightPink get() = rgb(0xFF, 0xB6, 0xC1)
        inline val LightSalmon get() = rgb(0xFF, 0xA0, 0x7A)
        inline val LightSeaGreen get() = rgb(0x20, 0xB2, 0xAA)
        inline val LightSkyBlue get() = rgb(0x87, 0xCE, 0xFA)
        inline val LightSlateGray get() = rgb(0x77, 0x88, 0x99)
        inline val LightSlateGrey get() = rgb(0x77, 0x88, 0x99)
        inline val LightSteelBlue get() = rgb(0xB0, 0xC4, 0xDE)
        inline val LightYellow get() = rgb(0xFF, 0xFF, 0xE0)
        inline val Lime get() = rgb(0x00, 0xFF, 0x00)
        inline val LimeGreen get() = rgb(0x32, 0xCD, 0x32)
        inline val Linen get() = rgb(0xFA, 0xF0, 0xE6)
        inline val Magenta get() = rgb(0xFF, 0x00, 0xFF)
        inline val Maroon get() = rgb(0x80, 0x00, 0x00)
        inline val MediumAquaMarine get() = rgb(0x66, 0xCD, 0xAA)
        inline val MediumBlue get() = rgb(0x00, 0x00, 0xCD)
        inline val MediumOrchid get() = rgb(0xBA, 0x55, 0xD3)
        inline val MediumPurple get() = rgb(0x93, 0x70, 0xDB)
        inline val MediumSeaGreen get() = rgb(0x3C, 0xB3, 0x71)
        inline val MediumSlateBlue get() = rgb(0x7B, 0x68, 0xEE)
        inline val MediumSpringGreen get() = rgb(0x00, 0xFA, 0x9A)
        inline val MediumTurquoise get() = rgb(0x48, 0xD1, 0xCC)
        inline val MediumVioletRed get() = rgb(0xC7, 0x15, 0x85)
        inline val MidnightBlue get() = rgb(0x19, 0x19, 0x70)
        inline val MintCream get() = rgb(0xF5, 0xFF, 0xFA)
        inline val MistyRose get() = rgb(0xFF, 0xE4, 0xE1)
        inline val Moccasin get() = rgb(0xFF, 0xE4, 0xB5)
        inline val NavajoWhite get() = rgb(0xFF, 0xDE, 0xAD)
        inline val Navy get() = rgb(0x00, 0x00, 0x80)
        inline val OldLace get() = rgb(0xFD, 0xF5, 0xE6)
        inline val Olive get() = rgb(0x80, 0x80, 0x00)
        inline val OliveDrab get() = rgb(0x6B, 0x8E, 0x23)
        inline val Orange get() = rgb(0xFF, 0xA5, 0x00)
        inline val OrangeRed get() = rgb(0xFF, 0x45, 0x00)
        inline val Orchid get() = rgb(0xDA, 0x70, 0xD6)
        inline val PaleGoldenRod get() = rgb(0xEE, 0xE8, 0xAA)
        inline val PaleGreen get() = rgb(0x98, 0xFB, 0x98)
        inline val PaleTurquoise get() = rgb(0xAF, 0xEE, 0xEE)
        inline val PaleVioletRed get() = rgb(0xDB, 0x70, 0x93)
        inline val PapayaWhip get() = rgb(0xFF, 0xEF, 0xD5)
        inline val PeachPuff get() = rgb(0xFF, 0xDA, 0xB9)
        inline val Peru get() = rgb(0xCD, 0x85, 0x3F)
        inline val Pink get() = rgb(0xFF, 0xC0, 0xCB)
        inline val Plum get() = rgb(0xDD, 0xA0, 0xDD)
        inline val PowderBlue get() = rgb(0xB0, 0xE0, 0xE6)
        inline val Purple get() = rgb(0x80, 0x00, 0x80)
        inline val RebeccaPurple get() = rgb(0x66, 0x33, 0x99)
        inline val Red get() = rgb(0xFF, 0x00, 0x00)
        inline val RosyBrown get() = rgb(0xBC, 0x8F, 0x8F)
        inline val RoyalBlue get() = rgb(0x41, 0x69, 0xE1)
        inline val SaddleBrown get() = rgb(0x8B, 0x45, 0x13)
        inline val Salmon get() = rgb(0xFA, 0x80, 0x72)
        inline val SandyBrown get() = rgb(0xF4, 0xA4, 0x60)
        inline val SeaGreen get() = rgb(0x2E, 0x8B, 0x57)
        inline val SeaShell get() = rgb(0xFF, 0xF5, 0xEE)
        inline val Sienna get() = rgb(0xA0, 0x52, 0x2D)
        inline val Silver get() = rgb(0xC0, 0xC0, 0xC0)
        inline val SkyBlue get() = rgb(0x87, 0xCE, 0xEB)
        inline val SlateBlue get() = rgb(0x6A, 0x5A, 0xCD)
        inline val SlateGray get() = rgb(0x70, 0x80, 0x90)
        inline val SlateGrey get() = rgb(0x70, 0x80, 0x90)
        inline val Snow get() = rgb(0xFF, 0xFA, 0xFA)
        inline val SpringGreen get() = rgb(0x00, 0xFF, 0x7F)
        inline val SteelBlue get() = rgb(0x46, 0x82, 0xB4)
        inline val Tan get() = rgb(0xD2, 0xB4, 0x8C)
        inline val Teal get() = rgb(0x00, 0x80, 0x80)
        inline val Thistle get() = rgb(0xD8, 0xBF, 0xD8)
        inline val Tomato get() = rgb(0xFF, 0x63, 0x47)
        inline val Turquoise get() = rgb(0x40, 0xE0, 0xD0)
        inline val Violet get() = rgb(0xEE, 0x82, 0xEE)
        inline val Wheat get() = rgb(0xF5, 0xDE, 0xB3)
        inline val White get() = rgb(0xFF, 0xFF, 0xFF)
        inline val WhiteSmoke get() = rgb(0xF5, 0xF5, 0xF5)
        inline val Yellow get() = rgb(0xFF, 0xFF, 0x00)
        inline val YellowGreen get() = rgb(0x9A, 0xCD, 0x32)
    }
}

fun Color.lightened() = inverted().darkened().inverted()